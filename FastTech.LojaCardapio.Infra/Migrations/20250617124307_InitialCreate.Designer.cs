// <auto-generated />
using System;
using FastTech.LojaCardapio.Infra.Persistense;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FastTech.LojaCardapio.Infra.Migrations
{
    [DbContext(typeof(LojaCardapioDbContext))]
    [Migration("20250617124307_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FastTech.LojaCardapio.Domain.Entities.MenuItemsEntity", b =>
                {
                    b.Property<Guid>("IdMenuItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("IdStore")
                        .HasColumnType("uuid");

                    b.Property<bool?>("IsAvailable")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LastUpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("IdMenuItem");

                    b.HasIndex("IdStore");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("FastTech.LojaCardapio.Domain.Entities.StoresEntity", b =>
                {
                    b.Property<Guid>("IdStore")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsAvailable")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LastUpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdStore");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("FastTech.LojaCardapio.Domain.Entities.MenuItemsEntity", b =>
                {
                    b.HasOne("FastTech.LojaCardapio.Domain.Entities.StoresEntity", "Store")
                        .WithMany("MenuItems")
                        .HasForeignKey("IdStore")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("FastTech.LojaCardapio.Domain.Entities.StoresEntity", b =>
                {
                    b.Navigation("MenuItems");
                });
#pragma warning restore 612, 618
        }
    }
}
